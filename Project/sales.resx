<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        BwAAAABJRU5ErkJggg==
</value>
  </data>
</root>